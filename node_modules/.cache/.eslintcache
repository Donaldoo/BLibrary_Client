[{"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\index.tsx":"1","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\App.tsx":"2","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Header.tsx":"3","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Footer.tsx":"4","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\index.tsx":"5","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Home.tsx":"6","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\index.ts":"7","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\bookList.tsx":"8","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\BookList.tsx":"9","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\BookCard.tsx":"10","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Interfaces\\index.ts":"11","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\NotFound.tsx":"12","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\index.ts":"13","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\BookDetails.tsx":"14","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\index.ts":"15","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\store.ts":"16","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\bookSlice.ts":"17","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\index.ts":"18","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\bookApi.ts":"19","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Authors.tsx":"20","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\AuthorCard.tsx":"21","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Login.tsx":"22","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Register.tsx":"23","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\authApi.ts":"24","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\userAuthSlice.ts":"25","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Utility\\SD.ts":"26","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Helper\\inputHelper.ts":"27","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Helper\\toastNotify.ts":"28","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Common\\MainLoader.tsx":"29","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\AccessDenied.tsx":"30","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\HOC\\withAuth.tsx":"31","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\HOC\\withAdminAuth.tsx":"32","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\authorSlice.ts":"33","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\categoryApi.ts":"34","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\categorySlice.ts":"35","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\CategoryUpsert.tsx":"36","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\ListCategories.tsx":"37","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\ListBooks.tsx":"38","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\authorApi.ts":"39","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\ListAuthors.tsx":"40","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\AuthorUpsert.tsx":"41","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\BookUpsert.tsx":"42","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Common\\Banner.tsx":"43"},{"size":673,"mtime":1680737510615,"results":"44","hashOfConfig":"45"},{"size":2118,"mtime":1680691029105,"results":"46","hashOfConfig":"45"},{"size":5966,"mtime":1680725121600,"results":"47","hashOfConfig":"45"},{"size":209,"mtime":1680732271762,"results":"48","hashOfConfig":"45"},{"size":94,"mtime":1680469422134,"results":"49","hashOfConfig":"45"},{"size":287,"mtime":1680725540292,"results":"50","hashOfConfig":"45"},{"size":157,"mtime":1680536671345,"results":"51","hashOfConfig":"45"},{"size":652,"mtime":1680478457363,"results":"52","hashOfConfig":"45"},{"size":1090,"mtime":1680726412188,"results":"53","hashOfConfig":"45"},{"size":3364,"mtime":1680725970829,"results":"54","hashOfConfig":"45"},{"size":300,"mtime":1680551814916,"results":"55","hashOfConfig":"45"},{"size":123,"mtime":1680521279317,"results":"56","hashOfConfig":"45"},{"size":746,"mtime":1680690962936,"results":"57","hashOfConfig":"45"},{"size":2636,"mtime":1680683895819,"results":"58","hashOfConfig":"45"},{"size":57,"mtime":1680524118621,"results":"59","hashOfConfig":"45"},{"size":1044,"mtime":1680682907735,"results":"60","hashOfConfig":"45"},{"size":383,"mtime":1680523805535,"results":"61","hashOfConfig":"45"},{"size":155,"mtime":1680639989104,"results":"62","hashOfConfig":"45"},{"size":1846,"mtime":1680709022202,"results":"63","hashOfConfig":"45"},{"size":1006,"mtime":1680618957042,"results":"64","hashOfConfig":"45"},{"size":1444,"mtime":1680560300194,"results":"65","hashOfConfig":"45"},{"size":2992,"mtime":1680556157283,"results":"66","hashOfConfig":"45"},{"size":3541,"mtime":1680743048168,"results":"67","hashOfConfig":"45"},{"size":900,"mtime":1680549017659,"results":"68","hashOfConfig":"45"},{"size":664,"mtime":1680554584124,"results":"69","hashOfConfig":"45"},{"size":71,"mtime":1680549641630,"results":"70","hashOfConfig":"45"},{"size":297,"mtime":1680616131283,"results":"71","hashOfConfig":"45"},{"size":407,"mtime":1680555547940,"results":"72","hashOfConfig":"45"},{"size":530,"mtime":1680556047794,"results":"73","hashOfConfig":"45"},{"size":134,"mtime":1680556460959,"results":"74","hashOfConfig":"45"},{"size":306,"mtime":1680557810536,"results":"75","hashOfConfig":"45"},{"size":651,"mtime":1680559211816,"results":"76","hashOfConfig":"45"},{"size":401,"mtime":1680536110463,"results":"77","hashOfConfig":"45"},{"size":1779,"mtime":1680709017408,"results":"78","hashOfConfig":"45"},{"size":417,"mtime":1680640118123,"results":"79","hashOfConfig":"45"},{"size":4040,"mtime":1680693452799,"results":"80","hashOfConfig":"45"},{"size":3125,"mtime":1680728111875,"results":"81","hashOfConfig":"45"},{"size":3175,"mtime":1680737531284,"results":"82","hashOfConfig":"45"},{"size":1550,"mtime":1680709024612,"results":"83","hashOfConfig":"45"},{"size":3008,"mtime":1680728074124,"results":"84","hashOfConfig":"45"},{"size":4045,"mtime":1680690614028,"results":"85","hashOfConfig":"45"},{"size":7752,"mtime":1680730963242,"results":"86","hashOfConfig":"45"},{"size":343,"mtime":1680726692590,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1iguvwe",{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"105"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"105"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\index.tsx",["229"],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\App.tsx",["230"],[],"import React, { useEffect } from \"react\";\nimport { Footer, Header } from \"./Components\";\nimport { Routes, Route } from \"react-router-dom\";\nimport {\n  AccessDenied,\n  AuthorUpsert,\n  Authors,\n  BookDetails,\n  BookUpsert,\n  CategoryUpsert,\n  Home,\n  ListAuthors,\n  ListBooks,\n  ListCategories,\n  Login,\n  NotFound,\n  Register,\n} from \"./Pages\";\nimport jwt_decode from \"jwt-decode\";\nimport { useDispatch } from \"react-redux\";\nimport { userModel } from \"./Interfaces\";\nimport { setLoggedInUser } from \"./Storage/Redux/userAuthSlice\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const localToken = localStorage.getItem(\"token\");\n    if (localToken) {\n      const { fullName, email, id, role }: userModel = jwt_decode(localToken);\n      dispatch(setLoggedInUser({ fullName, email, id, role }));\n    }\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"pb-5\">\n        <Routes>\n          <Route path=\"/\" element={<Home />}></Route>\n          <Route path=\"/bookDetails/:bookId\" element={<BookDetails />}></Route>\n          <Route path=\"/authors\" element={<Authors />}></Route>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/accessDenied\" element={<AccessDenied />}></Route>\n          <Route path=\"/crud/ListBooks\" element={<ListBooks />} />\n          <Route path=\"/crud/bookUpsert\" element={<BookUpsert />} />\n          <Route path=\"/crud/bookupsert/:id\" element={<BookUpsert />} />\n          <Route path=\"/crud/categoryUpsert/:id\" element={<CategoryUpsert />} />\n          <Route path=\"/crud/categoryUpsert\" element={<CategoryUpsert />} />\n          <Route path=\"/crud/listCategories\" element={<ListCategories />} />\n          <Route path=\"/crud/listAuthors\" element={<ListAuthors />} />\n          <Route path=\"/crud/authorUpsert\" element={<AuthorUpsert />} />\n          <Route path=\"/crud/authorUpsert/:id\" element={<AuthorUpsert />} />\n          <Route path=\"*\" element={<NotFound />}></Route>\n        </Routes>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Header.tsx",["231","232","233","234","235","236"],[],"import React from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userModel } from \"../Interfaces\";\r\nimport { RootState } from \"../Storage/Redux/store\";\r\nimport {\r\n  emptyUserState,\r\n  setLoggedInUser,\r\n} from \"../Storage/Redux/userAuthSlice\";\r\nimport { SD_Roles } from \"../Utility/SD\";\r\nlet logo = require(\"../Assets/Images/book.png\");\r\n\r\nfunction Header() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const userData: userModel = useSelector(\r\n    (state: RootState) => state.userAuthStore\r\n  );\r\n\r\n  const role = userData.role;\r\n\r\n  const isAdmin = role === \"admin\";\r\n  const isauthor = role === \"author\";\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch(setLoggedInUser({ ...emptyUserState }));\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg bg-dark navbar-dark\">\r\n        <div className=\"container-fluid\">\r\n          <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n            <img src={logo} style={{ height: \"40px\" }} className=\"m-1\" />\r\n          </NavLink>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 w-100\">\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n\r\n              {userData.id ? (\r\n                <>\r\n                  <li className=\"nav-item\">\r\n                    <NavLink\r\n                      className=\"nav-link\"\r\n                      aria-current=\"page\"\r\n                      to=\"/authors\"\r\n                    >\r\n                      Report page\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item dropdown\">\r\n                    <a\r\n                      className=\"nav-link dropdown-toggle\"\r\n                      href=\"#\"\r\n                      role=\"button\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      {isAdmin ? \"Admin panel\" : \"Author panel\"}\r\n                    </a>\r\n                    <ul className=\"dropdown-menu\">\r\n                      {isAdmin && (\r\n                        <>\r\n                          <li\r\n                            className=\"dropdown-item\"\r\n                            onClick={() => navigate(\"crud/listCategories\")}\r\n                          >\r\n                            Categories\r\n                          </li>\r\n                          <li>\r\n                            <a\r\n                              className=\"dropdown-item\"\r\n                              onClick={() => navigate(\"crud/listAuthors\")}\r\n                            >\r\n                              Authors\r\n                            </a>\r\n                          </li>\r\n                        </>\r\n                      )}\r\n                      <li>\r\n                        <a\r\n                          className=\"dropdown-item\"\r\n                          onClick={() => navigate(\"crud/ListBooks\")}\r\n                        >\r\n                          Books\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </li>\r\n                </>\r\n              ) : (\r\n                <></>\r\n              )}\r\n\r\n              <div className=\"d-flex\" style={{ marginLeft: \"auto\" }}>\r\n                {userData.id && (\r\n                  <>\r\n                    <li className=\"nav-item\">\r\n                      <button\r\n                        className=\"nav-link active\"\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          background: \"transparent\",\r\n                          border: 0,\r\n                        }}\r\n                      >\r\n                        Welcome {userData.fullName}\r\n                      </button>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                      <button\r\n                        className=\"btn btn-warning btn-outlined rounded-pill text-white mx-2\"\r\n                        style={{\r\n                          border: \"none\",\r\n                          height: \"40px\",\r\n                          width: \"100px\",\r\n                        }}\r\n                        onClick={handleLogout}\r\n                      >\r\n                        Logout\r\n                      </button>\r\n                    </li>\r\n                  </>\r\n                )}\r\n\r\n                {!userData.id && (\r\n                  <>\r\n                    {\" \"}\r\n                    <li className=\"nav-item text-white\">\r\n                      <NavLink className=\"nav-link\" to=\"/register\">\r\n                        Register\r\n                      </NavLink>\r\n                    </li>\r\n                    <li\r\n                      className=\"btn btn-warning btn-outlined rounded-pill text-white mx-2 pt-0\"\r\n                      style={{ border: \"none\", height: \"40px\", width: \"100px\" }}\r\n                    >\r\n                      <NavLink className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                      </NavLink>\r\n                    </li>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Footer.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\index.tsx",[],[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Home.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\index.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\bookList.tsx",["237"],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\BookList.tsx",["238"],[],"import React, { useEffect } from \"react\";\r\nimport { bookModel } from \"../../Interfaces\";\r\nimport { BookCard } from \".\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useGetBooksQuery } from \"../../Apis/bookApi\";\r\nimport { setBook } from \"../../Storage/Redux/bookSlice\";\r\nimport MainLoader from \"../Common/MainLoader\";\r\n\r\nfunction BookList() {\r\n  const dispatch = useDispatch();\r\n  const { data, isLoading } = useGetBooksQuery(null);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      dispatch(setBook(data.result));\r\n    }\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) {\r\n    return <MainLoader />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        minHeight: \"100vh\",\r\n      }}\r\n    >\r\n      <div className=\"container row\" style={{ paddingBottom: \"100px\" }}>\r\n        {data.result.length > 0 &&\r\n          data.result.map((book: bookModel, index: number) => (\r\n            <BookCard book={book} key={index} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookList;\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\BookCard.tsx",["239","240"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { CategoryModel, bookModel } from \"../../Interfaces\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  book: bookModel;\r\n}\r\n\r\ninterface Author {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction BookCard(props: Props) {\r\n const [author, setAuthor] = useState<Author | null>(null);\r\n const [categories, setCategories] = useState<CategoryModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, [props.book.id]);\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://blibraryapi.azurewebsites.net/api/Book/${props.book.id}/categories`\r\n      );\r\n      const data = await response.json();\r\n      setCategories(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAuthor();\r\n  }, []);\r\n\r\n  const fetchAuthor = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://blibraryapi.azurewebsites.net/api/author/${props.book.authorId}`\r\n      );\r\n      const data = await response.json();\r\n      setAuthor(data.result);\r\n    } catch (error) {\r\n      console.error(\"Error fetching author:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-4 col-12 p-5\">\r\n      <div\r\n        className=\"card\"\r\n        style={{ boxShadow: \"0 1px 7px 0 rgb(0 0 0 / 50%)\" }}\r\n      >\r\n        <div className=\"card-body pt-3\">\r\n          <div className=\"row col-10 offset-1 p-2\">\r\n            <Link to={`/bookDetails/${props.book.id}`}>\r\n              <img\r\n                src={props.book.image}\r\n                style={{\r\n                  borderRadius: \"5%\",\r\n                  objectFit: \"cover\",\r\n                  height: \"350px\",\r\n                }}\r\n                alt=\"\"\r\n                className=\"w-100 mt-1 image-box\"\r\n              />\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <p className=\"card-title m-0 text-success fs-3\">\r\n              <Link\r\n                to={`/bookDetails/${props.book.id}`}\r\n                style={{ textDecoration: \"none\", color: \"green\" }}\r\n              >\r\n                {props.book.name}\r\n              </Link>\r\n            </p>\r\n\r\n            <div className=\"d-flex flex-wrap justify-content-center pb-3\">\r\n              {categories.map((category) => (\r\n                <span\r\n                  key={category.id}\r\n                  className=\"badge bg-secondary m-1\"\r\n                  style={{ fontSize: \"12px\" }}\r\n                >\r\n                  {category.name}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <p\r\n            className=\"card-text\"\r\n            style={{ textAlign: \"center\", height: \"120px\", overflow: \"hidden\" }}\r\n          >\r\n            {props.book.description}\r\n          </p>\r\n          <div className=\"row text-center\" style={{ color: \"green\"}}>\r\n            <h4>{author ? author.name : \"Loading author...\"}</h4>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"badge bg-secondary\" style={{ fontSize: \"12px\" }}>\r\n              {props.book.createdAt}\r\n            </p>\r\n            <p>Created by: {props.book.createdBy}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookCard;\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Interfaces\\index.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\NotFound.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\index.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\BookDetails.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\index.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\store.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\bookSlice.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\index.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\bookApi.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Authors.tsx",["241"],[],"import React, { useEffect } from \"react\";\r\nimport { useGetAuthorsWithBookCountQuery } from \"../Apis/bookApi\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAuthor } from \"../Storage/Redux/authorSlice\";\r\nimport { AuthorCard } from \"../Components/Page\";\r\nimport { authorModel } from \"../Interfaces\";\r\nimport MainLoader from \"../Components/Common/MainLoader\";\r\nimport withAuth from \"../HOC/withAuth\";\r\n\r\nfunction Authors() {\r\n  const dispatch = useDispatch();\r\n  const { data, isLoading } = useGetAuthorsWithBookCountQuery(null);\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      dispatch(setAuthor(data));\r\n    }\r\n  }, [isLoading]);\r\n\r\n  if (isLoading) {\r\n    return <MainLoader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container row mx-auto\" style={{ paddingBottom: \"100px\"}}>\r\n      {data.length > 0 &&\r\n        data.map((author: authorModel, index: number) => (\r\n          <AuthorCard author={author} key={index} />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAuth(Authors);\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Page\\AuthorCard.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Login.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\Register.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\authApi.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\userAuthSlice.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Utility\\SD.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Helper\\inputHelper.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Helper\\toastNotify.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Common\\MainLoader.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\AccessDenied.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\HOC\\withAuth.tsx",["242"],[],"const withAuth = (WrappedComponent: any) => {\r\n  return (props: any) => {\r\n    const accessToken = localStorage.getItem(\"token\");\r\n    if (!accessToken) {\r\n      window.location.replace(\"/login\");\r\n    }\r\n    return <WrappedComponent {...props} />;\r\n    return null;\r\n  };\r\n};\r\n\r\nexport default withAuth;\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\HOC\\withAdminAuth.tsx",["243"],[],"import jwt_decode from \"jwt-decode\";\r\nimport { SD_Roles } from \"../Utility/SD\";\r\n\r\nconst withAdminAuth = (WrappedComponent: any) => {\r\n  return (props: any) => {\r\n    const accessToken = localStorage.getItem(\"token\") ?? \"\";\r\n\r\n    if (accessToken) {\r\n      const decode: {\r\n        role: string;\r\n      } = jwt_decode(accessToken);\r\n\r\n      if (decode.role !== SD_Roles.ADMIN) {\r\n        window.location.replace(\"/accessDenied\");\r\n        return null;\r\n      }\r\n    } else {\r\n      window.location.replace(\"/login\");\r\n      return null;\r\n    }\r\n    return <WrappedComponent {...props} />;\r\n    return null;\r\n  };\r\n};\r\n\r\nexport default withAdminAuth;\r\n",[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\authorSlice.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\categoryApi.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Storage\\Redux\\categorySlice.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\CategoryUpsert.tsx",["244","245","246","247"],[],"import React, { useState, useEffect } from \"react\";\r\nimport inputHelper from \"../../Helper/inputHelper\";\r\n\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  useCreateCategoryMutation,\r\n  useGetCategoryByIdQuery,\r\n  useUpdateCategoryMutation,\r\n} from \"../../Apis/categoryApi\";\r\nimport { userModel } from \"../../Interfaces\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../Storage/Redux/store\";\r\nimport toastNotify from \"../../Helper/toastNotify\";\r\nimport withAdminAuth from \"../../HOC/withAdminAuth\";\r\n\r\nconst categoryData = {\r\n  name: \"\",\r\n  priority: \"\",\r\n  createdBy: \"\",\r\n};\r\n\r\nfunction CategoryUpsert() {\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [categoryInputs, setCategoryInputs] = useState(categoryData);\r\n  const [createCategory] = useCreateCategoryMutation();\r\n  const [updateCategory] = useUpdateCategoryMutation();\r\n\r\n  const userData: userModel = useSelector(\r\n    (state: RootState) => state.userAuthStore\r\n  );\r\n  \r\n  const { data } = useGetCategoryByIdQuery(id);\r\n  useEffect(()=> {\r\n    if(data && data.result) {\r\n      const tempData = {\r\n        name: data.result.name,\r\n        priority: data.result.priority,\r\n        createdBy: userData.fullName || \"null\",\r\n      };\r\n      setCategoryInputs(tempData);\r\n    }\r\n  },[data])\r\n\r\n  const handleCategoryInput = (\r\n    e: React.ChangeEvent<\r\n      HTMLInputElement\r\n    >\r\n  ) => {\r\n    const tempData = inputHelper(e, categoryInputs);\r\n    setCategoryInputs(tempData);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const payload = {\r\n      name: categoryInputs.name,\r\n      priority: categoryInputs.priority,\r\n      createdBy: userData.fullName,\r\n    };\r\n\r\n    console.log(payload);\r\n\r\n    let response;\r\n    if(id){\r\n      //update\r\n      const updatedPayload = {...payload, id};\r\n      const obj = {data: updatedPayload, id}\r\n      console.log(obj)\r\n      response = await updateCategory(obj)\r\n      toastNotify(\"Category updated successfully!\")\r\n    } else {\r\n      //create\r\n      const response = await createCategory(payload);\r\n      toastNotify(\"Category created successfully\", \"success\")\r\n    }\r\n\r\n\r\n    \r\n    if (response) {\r\n      setLoading(false);\r\n      navigate(\"/crud/listCategories\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container border mt-5 p-5\">\r\n      <h3 className=\"px-2 text-success\">\r\n        {id ? \"Edit category\" : \"Add category\"}\r\n      </h3>\r\n      <form method=\"post\" onSubmit={handleSubmit}>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-md-7 offset-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Name\"\r\n              name=\"name\"\r\n              value={categoryInputs.name}\r\n              onChange={handleCategoryInput}\r\n            />\r\n            <input\r\n              className=\"form-control mt-3\"\r\n              placeholder=\"Enter priority\"\r\n              name=\"priority\"\r\n              value={categoryInputs.priority}\r\n              onChange={handleCategoryInput}\r\n            ></input>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n                <button\r\n                  type=\"submit\"\r\n                  style={{ width: \"50%\" }}\r\n                  className=\"btn btn-success form-control mt-5\"\r\n\r\n                >\r\n                  {id ? \"update\" : \"Create\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <a\r\n                  onClick={() => navigate(\"/crud/listCategories\")}\r\n                  className=\"btn btn-secondary form-control mt-5\"\r\n                >\r\n                  Back to list\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAdminAuth(CategoryUpsert);\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\ListCategories.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\ListBooks.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Apis\\authorApi.ts",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\ListAuthors.tsx",[],[],"C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\AuthorUpsert.tsx",["248","249","250","251"],[],"import React, { useState, useEffect } from \"react\";\r\nimport inputHelper from \"../../Helper/inputHelper\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { userModel } from \"../../Interfaces\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../Storage/Redux/store\";\r\nimport toastNotify from \"../../Helper/toastNotify\";\r\nimport withAdminAuth from \"../../HOC/withAdminAuth\";\r\nimport {\r\n  useCreateAuthorMutation,\r\n  useGetAuthorByIdQuery,\r\n  useUpdateAuthorMutation,\r\n} from \"../../Apis/authorApi\";\r\n\r\nconst authorData = {\r\n  name: \"\",\r\n  bio: \"\",\r\n  createdBy: \"\",\r\n};\r\n\r\nfunction AuthorUpsert() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [authorInputs, setAuthorInputs] = useState(authorData);\r\n  const [createAuthor] = useCreateAuthorMutation();\r\n  const [updateAuthor] = useUpdateAuthorMutation();\r\n  const userData: userModel = useSelector(\r\n    (state: RootState) => state.userAuthStore\r\n  );\r\n\r\n  const { data } = useGetAuthorByIdQuery(id);\r\n  useEffect(() => {\r\n    if (data && data.result) {\r\n      const tempData = {\r\n        name: data.result.name,\r\n        bio: data.result.bio,\r\n        createdBy: userData.fullName || \"null\",\r\n      };\r\n      setAuthorInputs(tempData);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleAuthorInput = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const tempData = inputHelper(e, authorInputs);\r\n    setAuthorInputs(tempData);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", authorInputs.name);\r\n    formData.append(\"bio\", authorInputs.bio);\r\n    formData.append(\"createdBy\", userData.fullName || \"null\");\r\n\r\n    formData.forEach((value, key) => {\r\n        console.log(`${key}: ${value}`);\r\n      });\r\n\r\n    let response;\r\n    if (id) {\r\n      //update\r\n      formData.append(\"id\", id);\r\n      response = await updateAuthor({data: formData, id});\r\n      toastNotify(\"Author updated successfully!\");\r\n    } else {\r\n      //create\r\n      const response = await createAuthor(formData);\r\n      toastNotify(\"Author created successfully\", \"success\");\r\n    }\r\n\r\n    if (response) {\r\n      setLoading(false);\r\n      navigate(\"/crud/listAuthors\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container border mt-5 p-5\">\r\n      <h3 className=\"px-2 text-success\">\r\n        {id ? \"Edit author\" : \"Add author\"}\r\n      </h3>\r\n      <form method=\"post\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-md-7 offset-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Name\"\r\n              name=\"name\"\r\n              value={authorInputs.name}\r\n              onChange={handleAuthorInput}\r\n            />\r\n            <textarea\r\n              className=\"form-control mt-3\"\r\n              placeholder=\"Enter bio\"\r\n              name=\"bio\"\r\n              value={authorInputs.bio}\r\n              onChange={handleAuthorInput}\r\n            ></textarea>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n                <button\r\n                  type=\"submit\"\r\n                  style={{ width: \"50%\" }}\r\n                  className=\"btn btn-success form-control mt-5\"\r\n                  \r\n                >\r\n                  {id ? \"update\" : \"Create\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <a\r\n                  onClick={() => navigate(\"/crud/listAuthors\")}\r\n                  className=\"btn btn-secondary form-control mt-5\"\r\n                >\r\n                  Back to list\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAdminAuth(AuthorUpsert);\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Pages\\CRUD\\BookUpsert.tsx",["252"],[],"import React, { useEffect, useState } from \"react\";\r\nimport inputHelper from \"../../Helper/inputHelper\";\r\nimport toastNotify from \"../../Helper/toastNotify\";\r\nimport { userModel } from \"../../Interfaces\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../Storage/Redux/store\";\r\nimport {\r\n  useCreateBookMutation,\r\n  useGetBookByIdQuery,\r\n  useUpdateBookMutation,\r\n} from \"../../Apis/bookApi\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport MainLoader from \"../../Components/Common/MainLoader\";\r\nimport { useGetAuthorsQuery } from \"../../Apis/authorApi\";\r\nimport { useGetCategoriesQuery } from \"../../Apis/categoryApi\";\r\nimport ReactSelect from \"react-select\";\r\n\r\nconst bookData = {\r\n  name: \"\",\r\n  description: \"\",\r\n  createdBy: \"\",\r\n  authorId: \"\",\r\n  categoryId: [] as string[],\r\n};\r\n\r\nfunction BookUpsert() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [bookInputs, setBookInputs] = useState(bookData);\r\n  const [createBook] = useCreateBookMutation();\r\n  const [updateBook] = useUpdateBookMutation();\r\n  const [imageToStore, setImageToStore] = useState<any>();\r\n  const [imageToDisplay, setImageToDisplay] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const userData: userModel = useSelector(\r\n    (state: RootState) => state.userAuthStore\r\n  );\r\n  const { data: authors } = useGetAuthorsQuery(null);\r\n  const { data: categories } = useGetCategoriesQuery(null);\r\n  const { data } = useGetBookByIdQuery(id);\r\n\r\n  useEffect(() => {\r\n    if (data && data.result) {\r\n      const tempData = {\r\n        name: data.result.name,\r\n        description: data.result.description,\r\n        createdBy: data.result.createdBy,\r\n        authorId: data.result.authorId,\r\n        categoryId: Array.isArray(data.result.categoryId)\r\n          ? data.result.categoryId\r\n          : [],\r\n      };\r\n      setBookInputs(tempData);\r\n      setImageToDisplay(data.result.image);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleBookInput = (\r\n    e: React.ChangeEvent<\r\n      HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\r\n    >\r\n  ) => {\r\n    const tempData = inputHelper(e, bookInputs);\r\n    setBookInputs(tempData);\r\n  };\r\n\r\n  const handleCategoryChange = (selectedOptions: any) => {\r\n    setBookInputs({\r\n      ...bookInputs,\r\n      categoryId: selectedOptions.map((option: any) => option.value),\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    if (file) {\r\n      const imgType = file.type.split(\"/\")[1];\r\n      const validImgTypes = [\"jpeg\", \"jpg\", \"png\"];\r\n\r\n      const isImageTypeValid = validImgTypes.filter((e) => {\r\n        return e === imgType;\r\n      });\r\n\r\n      if (file.size > 5000 * 1024) {\r\n        setImageToStore(\"\");\r\n        toastNotify(\"File Must be less then 5 MB\", \"error\");\r\n        return;\r\n      } else if (isImageTypeValid.length === 0) {\r\n        setImageToStore(\"\");\r\n        toastNotify(\"File Must be in jpeg, jpg or png\", \"error\");\r\n        return;\r\n      }\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      setImageToStore(file);\r\n      reader.onload = (e) => {\r\n        const imgUrl = e.target?.result as string;\r\n        setImageToDisplay(imgUrl);\r\n      };\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    if (!imageToStore && !id) {\r\n      toastNotify(\"Please upload an image\", \"error\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"Name\", bookInputs.name);\r\n    formData.append(\"Description\", bookInputs.description);\r\n    formData.append(\"CreatedBy\", userData.fullName || \"null\");\r\n    formData.append(\"AuthorId\", bookInputs.authorId);\r\n\r\n    if (Array.isArray(bookInputs.categoryId)) {\r\n      bookInputs.categoryId.forEach((catId) => {\r\n        formData.append(\"CategoryId\", catId);\r\n      });\r\n    }\r\n\r\n    if (imageToDisplay) formData.append(\"File\", imageToStore);\r\n\r\n    let response;\r\n\r\n    if (id) {\r\n      //update\r\n      formData.append(\"Id\", id);\r\n      response = await updateBook({ data: formData, id });\r\n      toastNotify(\"Book was updated successfully\", \"success\");\r\n    } else {\r\n      //create\r\n      response = await createBook(formData);\r\n      toastNotify(\"Book was created successfully\", \"success\");\r\n    }\r\n\r\n    if (response) {\r\n      setLoading(false);\r\n      navigate(\"/crud/listBooks\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const categoryOptions = categories?.result.map((category: any) => ({\r\n    value: category.id,\r\n    label: category.name,\r\n  }));\r\n\r\n  const authorOptions = authors?.result.map((author: any) => ({\r\n    value: author.id,\r\n    label: author.name,\r\n  }));\r\n\r\n  const handleAuthorChange = (selectedOption: any) => {\r\n    setBookInputs({ ...bookInputs, authorId: selectedOption.value });\r\n  };\r\n\r\n  if (!authors || !categories) {\r\n    return <MainLoader />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container border mt-3 p-4 bg-light\">\r\n      {loading && <MainLoader />}\r\n      <h3 className=\"offset-2 px-2 text-success\">\r\n        {id ? \"Edit book\" : \"Add book\"}\r\n      </h3>\r\n      <form method=\"post\" encType=\"multipart/form-data\" onSubmit={handleSubmit}>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-md-5 offset-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Name\"\r\n              required\r\n              name=\"name\"\r\n              value={bookInputs.name}\r\n              onChange={handleBookInput}\r\n            />\r\n            <textarea\r\n              className=\"form-control mt-3\"\r\n              placeholder=\"Enter Description\"\r\n              rows={10}\r\n              name=\"description\"\r\n              value={bookInputs.description}\r\n              onChange={handleBookInput}\r\n            ></textarea>\r\n\r\n            <ReactSelect\r\n              className=\"mt-3\"\r\n              isMulti\r\n              options={categoryOptions}\r\n              onChange={handleCategoryChange}\r\n              value={bookInputs.categoryId.map((id: string) =>\r\n                categoryOptions.find((option: any) => option.value === id)\r\n              )}\r\n            />\r\n            <ReactSelect\r\n              className=\"form-control mt-3\"\r\n              name=\"authorId\"\r\n              options={authorOptions}\r\n              onChange={handleAuthorChange}\r\n              value={authorOptions.find(\r\n                (option: any) => option.value === bookInputs.authorId\r\n              )}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              onChange={handleFileChange}\r\n              className=\"form-control mt-3\"\r\n            />\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success form-control mt-3\"\r\n                >\r\n                  {id ? \"Update\" : \"Create\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <a\r\n                  onClick={() => navigate(\"/crud/listBooks\")}\r\n                  className=\"btn btn-secondary form-control mt-3\"\r\n                >\r\n                  Back to Menu Items\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-5 text-center\">\r\n            <img\r\n              src={imageToDisplay}\r\n              style={{ width: \"100%\", borderRadius: \"30px\" }}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookUpsert;\r\n","C:\\Users\\User\\Desktop\\LibraryClient\\booklibrary\\src\\Components\\Common\\Banner.tsx",[],[],{"ruleId":"253","severity":1,"message":"254","line":10,"column":26,"nodeType":"255","messageId":"256","endLine":10,"endColumn":31},{"ruleId":"257","severity":1,"message":"258","line":32,"column":6,"nodeType":"259","endLine":32,"endColumn":8,"suggestions":"260"},{"ruleId":"253","severity":1,"message":"261","line":10,"column":10,"nodeType":"255","messageId":"256","endLine":10,"endColumn":18},{"ruleId":"253","severity":1,"message":"262","line":24,"column":9,"nodeType":"255","messageId":"256","endLine":24,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":37,"column":13,"nodeType":"265","endLine":37,"endColumn":74},{"ruleId":"266","severity":1,"message":"267","line":70,"column":21,"nodeType":"265","endLine":76,"endColumn":22},{"ruleId":"266","severity":1,"message":"268","line":89,"column":29,"nodeType":"265","endLine":92,"endColumn":30},{"ruleId":"266","severity":1,"message":"268","line":99,"column":25,"nodeType":"265","endLine":102,"endColumn":26},{"ruleId":"253","severity":1,"message":"269","line":5,"column":10,"nodeType":"255","messageId":"256","endLine":5,"endColumn":15},{"ruleId":"257","severity":1,"message":"270","line":17,"column":6,"nodeType":"259","endLine":17,"endColumn":17,"suggestions":"271"},{"ruleId":"257","severity":1,"message":"272","line":20,"column":6,"nodeType":"259","endLine":20,"endColumn":21,"suggestions":"273"},{"ruleId":"257","severity":1,"message":"274","line":36,"column":6,"nodeType":"259","endLine":36,"endColumn":8,"suggestions":"275"},{"ruleId":"257","severity":1,"message":"276","line":18,"column":6,"nodeType":"259","endLine":18,"endColumn":17,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":8,"column":5,"nodeType":"280","messageId":"281","endLine":8,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":22,"column":5,"nodeType":"280","messageId":"281","endLine":22,"endColumn":17},{"ruleId":"253","severity":1,"message":"282","line":26,"column":10,"nodeType":"255","messageId":"256","endLine":26,"endColumn":17},{"ruleId":"257","severity":1,"message":"283","line":45,"column":5,"nodeType":"259","endLine":45,"endColumn":11,"suggestions":"284"},{"ruleId":"253","severity":1,"message":"285","line":78,"column":13,"nodeType":"255","messageId":"256","endLine":78,"endColumn":21},{"ruleId":"266","severity":1,"message":"268","line":128,"column":17,"nodeType":"265","endLine":131,"endColumn":18},{"ruleId":"253","severity":1,"message":"282","line":24,"column":10,"nodeType":"255","messageId":"256","endLine":24,"endColumn":17},{"ruleId":"257","severity":1,"message":"283","line":42,"column":6,"nodeType":"259","endLine":42,"endColumn":12,"suggestions":"286"},{"ruleId":"253","severity":1,"message":"285","line":70,"column":13,"nodeType":"255","messageId":"256","endLine":70,"endColumn":21},{"ruleId":"266","severity":1,"message":"268","line":118,"column":17,"nodeType":"265","endLine":121,"endColumn":18},{"ruleId":"266","severity":1,"message":"268","line":227,"column":17,"nodeType":"265","endLine":230,"endColumn":18},"@typescript-eslint/no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["287"],"'SD_Roles' is defined but never used.","'isauthor' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'books' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.result' and 'dispatch'. Either include them or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.",["289"],"React Hook useEffect has a missing dependency: 'fetchAuthor'. Either include it or remove the dependency array.",["290"],"React Hook useEffect has missing dependencies: 'data' and 'dispatch'. Either include them or remove the dependency array.",["291"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userData.fullName'. Either include it or remove the dependency array.",["292"],"'response' is assigned a value but never used.",["293"],{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},"Update the dependencies array to be: [dispatch]",{"range":"307","text":"308"},"Update the dependencies array to be: [data.result, dispatch, isLoading]",{"range":"309","text":"310"},"Update the dependencies array to be: [fetchCategories, props.book.id]",{"range":"311","text":"312"},"Update the dependencies array to be: [fetchAuthor]",{"range":"313","text":"314"},"Update the dependencies array to be: [data, dispatch, isLoading]",{"range":"315","text":"316"},"Update the dependencies array to be: [data, userData.fullName]",{"range":"317","text":"318"},{"range":"319","text":"318"},[832,834],"[dispatch]",[539,550],"[data.result, dispatch, isLoading]",[477,492],"[fetchCategories, props.book.id]",[897,899],"[fetchAuthor]",[631,642],"[data, dispatch, isLoading]",[1375,1381],"[data, userData.fullName]",[1325,1331]]