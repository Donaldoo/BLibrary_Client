{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst bookApi = createApi({\n  reducerPath: \"bookApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://blibraryapi.azurewebsites.net/\"\n  }),\n  tagTypes: [\"Books\"],\n  endpoints: builder => ({\n    getBooks: builder.query({\n      query: () => ({\n        url: \"api/book\"\n      }),\n      providesTags: [\"Books\"]\n    }),\n    getBookById: builder.query({\n      query: id => ({\n        url: `api/book/${id}`\n      }),\n      providesTags: [\"Books\"]\n    }),\n    getCategoriesByBookId: builder.query({\n      query: id => ({\n        url: `api/Book/${id}/categories`\n      })\n    }),\n    getAuthorsWithBookCount: builder.query({\n      query: () => ({\n        url: \"authors-with-book-count\"\n      })\n    }),\n    updateBook: builder.mutation({\n      query: _ref => {\n        let {\n          data,\n          id\n        } = _ref;\n        return {\n          url: \"api/book/\" + id,\n          method: \"PUT\",\n          body: data\n        };\n      },\n      invalidatesTags: [\"Books\"]\n    }),\n    createBook: builder.mutation({\n      query: _ref2 => {\n        let {\n          data\n        } = _ref2;\n        return {\n          url: \"api/book\",\n          method: \"POST\",\n          body: data\n        };\n      },\n      invalidatesTags: [\"Books\"]\n    }),\n    deleteBook: builder.mutation({\n      query: _ref3 => {\n        let {\n          id\n        } = _ref3;\n        return {\n          url: \"api/book/\" + id,\n          method: \"DELETE\"\n        };\n      },\n      invalidatesTags: [\"Books\"]\n    })\n  })\n});\nexport const {\n  useGetAuthorsQuery,\n  useGetBooksQuery,\n  useGetBookByIdQuery,\n  useGetAuthorByIdQuery,\n  useGetCategoriesByBookIdQuery,\n  useGetAuthorsWithBookCountQuery,\n  useUpdateBookMutation,\n  useCreateBookMutation,\n  useDeleteBookMutation\n} = bookApi;\nexport default bookApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","bookApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getBooks","query","url","providesTags","getBookById","id","getCategoriesByBookId","getAuthorsWithBookCount","updateBook","mutation","_ref","data","method","body","invalidatesTags","createBook","_ref2","deleteBook","_ref3","useGetAuthorsQuery","useGetBooksQuery","useGetBookByIdQuery","useGetAuthorByIdQuery","useGetCategoriesByBookIdQuery","useGetAuthorsWithBookCountQuery","useUpdateBookMutation","useCreateBookMutation","useDeleteBookMutation"],"sources":["C:/Users/User/Desktop/LibraryClient/booklibrary/src/Apis/bookApi.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst bookApi = createApi({\r\n  reducerPath: \"bookApi\",\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://blibraryapi.azurewebsites.net/\",\r\n  }),\r\n  tagTypes: [\"Books\"],\r\n  endpoints: (builder) => ({\r\n    getBooks: builder.query({\r\n      query: () => ({\r\n        url: \"api/book\",\r\n      }),\r\n      providesTags: [\"Books\"],\r\n    }),\r\n\r\n    getBookById: builder.query({\r\n      query: (id) => ({\r\n        url: `api/book/${id}`,\r\n      }),\r\n      providesTags: [\"Books\"],\r\n    }),\r\n\r\n    getCategoriesByBookId: builder.query({\r\n      query: (id) => ({\r\n        url: `api/Book/${id}/categories`,\r\n      }),\r\n    }),\r\n    getAuthorsWithBookCount: builder.query({\r\n      query: () => ({\r\n        url: \"authors-with-book-count\",\r\n      }),\r\n    }),\r\n\r\n    updateBook: builder.mutation({\r\n      query: ({ data, id }) => ({\r\n        url: \"api/book/\" + id,\r\n        method: \"PUT\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"Books\"],\r\n    }),\r\n\r\n    createBook: builder.mutation({\r\n      query: ({ data }) => ({\r\n        url: \"api/book\",\r\n        method: \"POST\",\r\n        body: data,\r\n      }),\r\n      invalidatesTags: [\"Books\"],\r\n    }),\r\n\r\n    deleteBook: builder.mutation({\r\n      query: ({ id }) => ({\r\n        url: \"api/book/\" + id,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"Books\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetAuthorsQuery,\r\n  useGetBooksQuery,\r\n  useGetBookByIdQuery,\r\n  useGetAuthorByIdQuery,\r\n  useGetCategoriesByBookIdQuery,\r\n  useGetAuthorsWithBookCountQuery,\r\n  useUpdateBookMutation,\r\n  useCreateBookMutation,\r\n  useDeleteBookMutation,\r\n} = bookApi;\r\nexport default bookApi;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,OAAO,GAAGF,SAAS,CAAC;EACxBG,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EAAE;EACX,CAAC,CAAC;EACFC,QAAQ,EAAE,CAAC,OAAO,CAAC;EACnBC,SAAS,EAAGC,OAAO,KAAM;IACvBC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAE;MACP,CAAC,CAAC;MACFC,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC,CAAC;IAEFC,WAAW,EAAEL,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAGI,EAAE,KAAM;QACdH,GAAG,EAAG,YAAWG,EAAG;MACtB,CAAC,CAAC;MACFF,YAAY,EAAE,CAAC,OAAO;IACxB,CAAC,CAAC;IAEFG,qBAAqB,EAAEP,OAAO,CAACE,KAAK,CAAC;MACnCA,KAAK,EAAGI,EAAE,KAAM;QACdH,GAAG,EAAG,YAAWG,EAAG;MACtB,CAAC;IACH,CAAC,CAAC;IACFE,uBAAuB,EAAER,OAAO,CAACE,KAAK,CAAC;MACrCA,KAAK,EAAEA,CAAA,MAAO;QACZC,GAAG,EAAE;MACP,CAAC;IACH,CAAC,CAAC;IAEFM,UAAU,EAAET,OAAO,CAACU,QAAQ,CAAC;MAC3BR,KAAK,EAAES,IAAA;QAAA,IAAC;UAAEC,IAAI;UAAEN;QAAG,CAAC,GAAAK,IAAA;QAAA,OAAM;UACxBR,GAAG,EAAE,WAAW,GAAGG,EAAE;UACrBO,MAAM,EAAE,KAAK;UACbC,IAAI,EAAEF;QACR,CAAC;MAAA,CAAC;MACFG,eAAe,EAAE,CAAC,OAAO;IAC3B,CAAC,CAAC;IAEFC,UAAU,EAAEhB,OAAO,CAACU,QAAQ,CAAC;MAC3BR,KAAK,EAAEe,KAAA;QAAA,IAAC;UAAEL;QAAK,CAAC,GAAAK,KAAA;QAAA,OAAM;UACpBd,GAAG,EAAE,UAAU;UACfU,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEF;QACR,CAAC;MAAA,CAAC;MACFG,eAAe,EAAE,CAAC,OAAO;IAC3B,CAAC,CAAC;IAEFG,UAAU,EAAElB,OAAO,CAACU,QAAQ,CAAC;MAC3BR,KAAK,EAAEiB,KAAA;QAAA,IAAC;UAAEb;QAAG,CAAC,GAAAa,KAAA;QAAA,OAAM;UAClBhB,GAAG,EAAE,WAAW,GAAGG,EAAE;UACrBO,MAAM,EAAE;QACV,CAAC;MAAA,CAAC;MACFE,eAAe,EAAE,CAAC,OAAO;IAC3B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXK,kBAAkB;EAClBC,gBAAgB;EAChBC,mBAAmB;EACnBC,qBAAqB;EACrBC,6BAA6B;EAC7BC,+BAA+B;EAC/BC,qBAAqB;EACrBC,qBAAqB;EACrBC;AACF,CAAC,GAAGlC,OAAO;AACX,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}