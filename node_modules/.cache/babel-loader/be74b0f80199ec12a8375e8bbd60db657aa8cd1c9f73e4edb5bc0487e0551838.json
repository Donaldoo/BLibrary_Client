{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\LibraryClient\\\\booklibrary\\\\src\\\\Pages\\\\CRUD\\\\AuthorUpsert.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport inputHelper from \"../../Helper/inputHelper\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport toastNotify from \"../../Helper/toastNotify\";\nimport withAdminAuth from \"../../HOC/withAdminAuth\";\nimport { useCreateAuthorMutation, useGetAuthorByIdQuery, useUpdateAuthorMutation } from \"../../Apis/authorApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authorData = {\n  name: \"\",\n  bio: \"\",\n  createdBy: \"\"\n};\nfunction AuthorUpsert() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [authorInputs, setAuthorInputs] = useState(authorData);\n  const [createAuthor] = useCreateAuthorMutation();\n  const [updateAuthor] = useUpdateAuthorMutation();\n  const userData = useSelector(state => state.userAuthStore);\n  const {\n    data\n  } = useGetAuthorByIdQuery(id);\n  useEffect(() => {\n    if (data && data.result) {\n      const tempData = {\n        name: data.result.name,\n        bio: data.result.bio,\n        createdBy: userData.fullName || \"null\"\n      };\n      setAuthorInputs(tempData);\n    }\n  }, [data]);\n  const handleAuthorInput = e => {\n    const tempData = inputHelper(e, authorInputs);\n    setAuthorInputs(tempData);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"name\", authorInputs.name);\n    formData.append(\"bio\", authorInputs.bio);\n    formData.append(\"createdBy\", userData.fullName || \"null\");\n    console.log(formData);\n    let response;\n    if (id) {\n      //update\n      formData;\n      const obj = {\n        data: updatedPayload,\n        id\n      };\n      console.log(obj);\n      response = await updateAuthor(obj);\n      toastNotify(\"Author updated successfully!\");\n    } else {\n      //create\n      const response = await createAuthor(payload);\n      toastNotify(\"Author created successfully\", \"success\");\n    }\n    if (response) {\n      setLoading(false);\n      navigate(\"/crud/authorList\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container border mt-5 p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"px-2 text-success\",\n      children: id ? \"Edit category\" : \"Add category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-7 offset-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter Name\",\n            name: \"name\",\n            value: authorInputs.name,\n            onChange: handleAuthorInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control mt-3\",\n            placeholder: \"Enter bio\",\n            name: \"bio\",\n            value: authorInputs.bio,\n            onChange: handleAuthorInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-8\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                style: {\n                  width: \"50%\"\n                },\n                className: \"btn btn-success form-control mt-5\",\n                onClick: () => navigate(\"/crud/listAuthors\"),\n                children: id ? \"update\" : \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => navigate(\"/crud/listAuthors\"),\n                className: \"btn btn-secondary form-control mt-5\",\n                children: \"Back to list\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthorUpsert, \"2wbhuJdUcm2hR0nOznDOK2eUnMc=\", false, function () {\n  return [useParams, useNavigate, useCreateAuthorMutation, useUpdateAuthorMutation, useSelector, useGetAuthorByIdQuery];\n});\n_c = AuthorUpsert;\nexport default _c2 = withAdminAuth(AuthorUpsert);\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthorUpsert\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","inputHelper","useNavigate","useParams","useSelector","toastNotify","withAdminAuth","useCreateAuthorMutation","useGetAuthorByIdQuery","useUpdateAuthorMutation","jsxDEV","_jsxDEV","authorData","name","bio","createdBy","AuthorUpsert","_s","id","navigate","loading","setLoading","authorInputs","setAuthorInputs","createAuthor","updateAuthor","userData","state","userAuthStore","data","result","tempData","fullName","handleAuthorInput","e","handleSubmit","preventDefault","formData","FormData","append","console","log","response","obj","updatedPayload","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","method","onSubmit","type","placeholder","value","onChange","style","width","onClick","_c","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/LibraryClient/booklibrary/src/Pages/CRUD/AuthorUpsert.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport inputHelper from \"../../Helper/inputHelper\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { userModel } from \"../../Interfaces\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../Storage/Redux/store\";\r\nimport toastNotify from \"../../Helper/toastNotify\";\r\nimport withAdminAuth from \"../../HOC/withAdminAuth\";\r\nimport {\r\n  useCreateAuthorMutation,\r\n  useGetAuthorByIdQuery,\r\n  useUpdateAuthorMutation,\r\n} from \"../../Apis/authorApi\";\r\n\r\nconst authorData = {\r\n  name: \"\",\r\n  bio: \"\",\r\n  createdBy: \"\",\r\n};\r\n\r\nfunction AuthorUpsert() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [authorInputs, setAuthorInputs] = useState(authorData);\r\n  const [createAuthor] = useCreateAuthorMutation();\r\n  const [updateAuthor] = useUpdateAuthorMutation();\r\n  const userData: userModel = useSelector(\r\n    (state: RootState) => state.userAuthStore\r\n  );\r\n\r\n  const { data } = useGetAuthorByIdQuery(id);\r\n  useEffect(() => {\r\n    if (data && data.result) {\r\n      const tempData = {\r\n        name: data.result.name,\r\n        bio: data.result.bio,\r\n        createdBy: userData.fullName || \"null\",\r\n      };\r\n      setAuthorInputs(tempData);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleAuthorInput = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const tempData = inputHelper(e, authorInputs);\r\n    setAuthorInputs(tempData);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", authorInputs.name);\r\n    formData.append(\"bio\", authorInputs.bio);\r\n    formData.append(\"createdBy\", userData.fullName || \"null\");\r\n\r\n    console.log(formData);\r\n\r\n    let response;\r\n    if (id) {\r\n      //update\r\n      formData\r\n\r\n      const obj = { data: updatedPayload, id };\r\n      console.log(obj);\r\n      response = await updateAuthor(obj);\r\n      toastNotify(\"Author updated successfully!\");\r\n    } else {\r\n      //create\r\n      const response = await createAuthor(payload);\r\n      toastNotify(\"Author created successfully\", \"success\");\r\n    }\r\n\r\n    if (response) {\r\n      setLoading(false);\r\n      navigate(\"/crud/authorList\");\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container border mt-5 p-5\">\r\n      <h3 className=\"px-2 text-success\">\r\n        {id ? \"Edit category\" : \"Add category\"}\r\n      </h3>\r\n      <form method=\"post\" onSubmit={handleSubmit}>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-md-7 offset-2\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Name\"\r\n              name=\"name\"\r\n              value={authorInputs.name}\r\n              onChange={handleAuthorInput}\r\n            />\r\n            <textarea\r\n              className=\"form-control mt-3\"\r\n              placeholder=\"Enter bio\"\r\n              name=\"bio\"\r\n              value={authorInputs.bio}\r\n              onChange={handleAuthorInput}\r\n            ></textarea>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n                <button\r\n                  type=\"submit\"\r\n                  style={{ width: \"50%\" }}\r\n                  className=\"btn btn-success form-control mt-5\"\r\n                  onClick={() => navigate(\"/crud/listAuthors\")}\r\n                >\r\n                  {id ? \"update\" : \"Create\"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <a\r\n                  onClick={() => navigate(\"/crud/listAuthors\")}\r\n                  className=\"btn btn-secondary form-control mt-5\"\r\n                >\r\n                  Back to list\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withAdminAuth(AuthorUpsert);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}